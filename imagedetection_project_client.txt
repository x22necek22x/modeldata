{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zlIJTRVrbwrI",
        "outputId": "d6290168-d5b6-4b7d-de85-3e5a5009baef"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "base_dir = '/content/drive/MyDrive/extracted_images'\n",
        "target_dir = '/content/drive/My Drive/dataset'\n"
      ],
      "metadata": {
        "id": "mECSCOFzcBz_"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "Vs7Gz2mfZtiq"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "import shutil\n",
        "\n",
        "\n",
        "# Create directories for the dataset if they don't exist\n",
        "if not os.path.exists(target_dir):\n",
        "    os.mkdir(target_dir)\n",
        "\n",
        "classes = ['E', 'Q']  # Class labels\n",
        "\n",
        "# Create subdirectories for classes\n",
        "for cls in classes:\n",
        "    class_dir = os.path.join(target_dir, cls)\n",
        "    if not os.path.exists(class_dir):\n",
        "        os.mkdir(class_dir)\n",
        "\n",
        "    # Move images to their respective directories\n",
        "    source_dir = os.path.join(base_dir, cls)\n",
        "    for file in os.listdir(source_dir):\n",
        "        src_file = os.path.join(source_dir, file)\n",
        "        dst_file = os.path.join(class_dir, file)\n",
        "        shutil.move(src_file, dst_file)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
        "\n",
        "# Define the dimensions to which you want to resize your images\n",
        "img_height, img_width = 64, 64\n",
        "\n",
        "# Setup the training and validation data generators with augmentation options for the training data\n",
        "train_datagen = ImageDataGenerator(\n",
        "    rescale=1./255,  # Normalize pixel values to [0,1]\n",
        "    rotation_range=20,  # Randomly rotate images in the range (degrees, 0 to 180)\n",
        "    width_shift_range=0.2,  # Randomly translate images horizontally (fraction of total width)\n",
        "    height_shift_range=0.2,  # Randomly translate images vertically (fraction of total height)\n",
        "    shear_range=0.2,  # Shear Intensity (Shear angle in counter-clockwise direction in degrees)\n",
        "    zoom_range=0.2,  # Randomly zoom image\n",
        "    horizontal_flip=True,  # Randomly flip images horizontally\n",
        "    fill_mode='nearest'  # Set rule for filling in newly created pixels\n",
        ")\n",
        "\n",
        "val_datagen = ImageDataGenerator(rescale=1./255)  # Only rescale validation images\n"
      ],
      "metadata": {
        "id": "Q3KcsrGsc3RR"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import shutil\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Set the directory containing your classes\n",
        "base_dir = '/content/drive/MyDrive/dataset'  # Update this path\n",
        "train_dir = os.path.join(base_dir, 'train')\n",
        "val_dir = os.path.join(base_dir, 'validation')\n",
        "\n",
        "# Ensure training and validation directories exist\n",
        "os.makedirs(train_dir, exist_ok=True)\n",
        "os.makedirs(val_dir, exist_ok=True)\n",
        "\n",
        "# Function to split data and move files\n",
        "def split_data(class_name):\n",
        "    source_dir = os.path.join(base_dir, class_name)  # Folder with original images\n",
        "    files = os.listdir(source_dir)\n",
        "\n",
        "    # Split data into training and validation sets\n",
        "    train_files, val_files = train_test_split(files, test_size=0.2, random_state=42)\n",
        "\n",
        "    # Create class directories in train and validation folders if they don't exist\n",
        "    train_class_dir = os.path.join(train_dir, class_name)\n",
        "    val_class_dir = os.path.join(val_dir, class_name)\n",
        "    os.makedirs(train_class_dir, exist_ok=True)\n",
        "    os.makedirs(val_class_dir, exist_ok=True)\n",
        "\n",
        "    # Move files to respective directories\n",
        "    for file in train_files:\n",
        "        shutil.move(os.path.join(source_dir, file), os.path.join(train_class_dir, file))\n",
        "    for file in val_files:\n",
        "        shutil.move(os.path.join(source_dir, file), os.path.join(val_class_dir, file))\n",
        "\n",
        "# Apply the function to each class directory\n",
        "classes = ['E', 'Q']  # Update this if you have more classes\n",
        "for cls in classes:\n",
        "    split_data(cls)\n"
      ],
      "metadata": {
        "id": "ZWK9f7PLekL0"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_dir = '/content/drive/MyDrive/dataset/train'\n",
        "val_dir = '/content/drive/MyDrive/dataset/validation'\n",
        "train_generator = train_datagen.flow_from_directory(\n",
        "    train_dir,\n",
        "    target_size=(img_height, img_width),\n",
        "    batch_size=32,\n",
        "    class_mode='binary'  # or 'categorical' if more than two classes\n",
        ")\n",
        "\n",
        "validation_generator = val_datagen.flow_from_directory(\n",
        "    val_dir,\n",
        "    target_size=(img_height, img_width),\n",
        "    batch_size=32,\n",
        "    class_mode='binary'  # or 'categorical' if more than two classes\n",
        ")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lI200mmqdDvH",
        "outputId": "baecdc5d-7641-4c35-f42e-2ce4ba5b1974"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found 192 images belonging to 2 classes.\n",
            "Found 57 images belonging to 2 classes.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n"
      ],
      "metadata": {
        "id": "SgKrG9kIg0ZM"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.applications import MobileNetV2\n",
        "from tensorflow.keras.layers import GlobalAveragePooling2D\n",
        "\n",
        "# Load pre-trained MobileNetV2 model, exclude the top layer\n",
        "base_model = MobileNetV2(weights='imagenet', include_top=False, input_shape=(64, 64, 3))\n",
        "\n",
        "# Freeze the base model\n",
        "base_model.trainable = False\n",
        "\n",
        "# Add custom layers on top of the base model\n",
        "model = Sequential([\n",
        "    base_model,\n",
        "    GlobalAveragePooling2D(),\n",
        "    Dense(128, activation='relu'),\n",
        "    Dropout(0.5),\n",
        "    Dense(1, activation='sigmoid')\n",
        "])\n",
        "\n",
        "model.compile(optimizer='adam',\n",
        "              loss='binary_crossentropy',\n",
        "              metrics=['accuracy'])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8bJpvUP3l5eM",
        "outputId": "9f39c316-b532-4c71-a23f-ba6b5002bf68"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:`input_shape` is undefined or non-square, or `rows` is not in [96, 128, 160, 192, 224]. Weights for input shape (224, 224) will be loaded as the default.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/mobilenet_v2/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_1.0_224_no_top.h5\n",
            "9406464/9406464 [==============================] - 0s 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J2k_61xzhGpj",
        "outputId": "d091fdaf-5b53-4c62-81a4-489d2b5c9855"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " mobilenetv2_1.00_224 (Func  (None, 2, 2, 1280)        2257984   \n",
            " tional)                                                         \n",
            "                                                                 \n",
            " global_average_pooling2d (  (None, 1280)              0         \n",
            " GlobalAveragePooling2D)                                         \n",
            "                                                                 \n",
            " dense (Dense)               (None, 128)               163968    \n",
            "                                                                 \n",
            " dropout (Dropout)           (None, 128)               0         \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 1)                 129       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 2422081 (9.24 MB)\n",
            "Trainable params: 164097 (641.00 KB)\n",
            "Non-trainable params: 2257984 (8.61 MB)\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "batch_size = 32  # Ensure this is appropriate based on your dataset size\n",
        "\n",
        "if train_generator.samples == 0 or validation_generator.samples == 0:\n",
        "    raise ValueError(\"No samples found in training or validation directories. Check the paths and class directories.\")\n",
        "\n",
        "steps_per_epoch = max(1, train_generator.samples // batch_size)\n",
        "validation_steps = max(1, validation_generator.samples // batch_size)\n"
      ],
      "metadata": {
        "id": "eTNs1EHcixYk"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(\n",
        "    train_generator,\n",
        "    validation_data=validation_generator,\n",
        "    epochs=20,\n",
        "    steps_per_epoch=steps_per_epoch,\n",
        "    validation_steps=validation_steps\n",
        ")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "PH_F1l6whJts",
        "outputId": "b017c775-059a-4163-9bb4-271f0e63b37b"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n",
            "6/6 [==============================] - 60s 10s/step - loss: 0.6144 - accuracy: 0.7396 - val_loss: 0.3161 - val_accuracy: 0.8750\n",
            "Epoch 2/20\n",
            "6/6 [==============================] - 2s 269ms/step - loss: 0.2871 - accuracy: 0.8646 - val_loss: 0.3631 - val_accuracy: 0.8438\n",
            "Epoch 3/20\n",
            "6/6 [==============================] - 2s 284ms/step - loss: 0.2565 - accuracy: 0.9010 - val_loss: 0.2374 - val_accuracy: 0.9062\n",
            "Epoch 4/20\n",
            "6/6 [==============================] - 2s 291ms/step - loss: 0.1871 - accuracy: 0.9271 - val_loss: 0.2031 - val_accuracy: 0.9375\n",
            "Epoch 5/20\n",
            "6/6 [==============================] - 2s 378ms/step - loss: 0.1669 - accuracy: 0.9427 - val_loss: 0.2735 - val_accuracy: 0.9062\n",
            "Epoch 6/20\n",
            "6/6 [==============================] - 3s 457ms/step - loss: 0.1430 - accuracy: 0.9531 - val_loss: 0.2244 - val_accuracy: 0.9375\n",
            "Epoch 7/20\n",
            "6/6 [==============================] - 2s 282ms/step - loss: 0.2274 - accuracy: 0.9115 - val_loss: 0.1316 - val_accuracy: 0.9688\n",
            "Epoch 8/20\n",
            "6/6 [==============================] - 2s 268ms/step - loss: 0.1448 - accuracy: 0.9479 - val_loss: 0.1700 - val_accuracy: 0.9375\n",
            "Epoch 9/20\n",
            "6/6 [==============================] - 2s 293ms/step - loss: 0.1415 - accuracy: 0.9375 - val_loss: 0.0533 - val_accuracy: 1.0000\n",
            "Epoch 10/20\n",
            "6/6 [==============================] - 2s 268ms/step - loss: 0.0998 - accuracy: 0.9479 - val_loss: 0.1213 - val_accuracy: 0.9688\n",
            "Epoch 11/20\n",
            "6/6 [==============================] - 2s 331ms/step - loss: 0.1695 - accuracy: 0.9427 - val_loss: 0.3310 - val_accuracy: 0.9375\n",
            "Epoch 12/20\n",
            "6/6 [==============================] - 2s 406ms/step - loss: 0.1705 - accuracy: 0.9271 - val_loss: 0.4316 - val_accuracy: 0.9062\n",
            "Epoch 13/20\n",
            "6/6 [==============================] - 2s 351ms/step - loss: 0.1214 - accuracy: 0.9479 - val_loss: 0.2696 - val_accuracy: 0.9688\n",
            "Epoch 14/20\n",
            "6/6 [==============================] - 2s 286ms/step - loss: 0.1028 - accuracy: 0.9427 - val_loss: 0.3780 - val_accuracy: 0.9062\n",
            "Epoch 15/20\n",
            "6/6 [==============================] - 2s 348ms/step - loss: 0.1402 - accuracy: 0.9427 - val_loss: 0.2787 - val_accuracy: 0.9688\n",
            "Epoch 16/20\n",
            "6/6 [==============================] - 3s 444ms/step - loss: 0.1290 - accuracy: 0.9375 - val_loss: 0.1032 - val_accuracy: 0.9688\n",
            "Epoch 17/20\n",
            "6/6 [==============================] - 2s 272ms/step - loss: 0.1582 - accuracy: 0.9271 - val_loss: 0.3269 - val_accuracy: 0.9375\n",
            "Epoch 18/20\n",
            "6/6 [==============================] - 3s 431ms/step - loss: 0.1698 - accuracy: 0.9427 - val_loss: 0.4059 - val_accuracy: 0.9062\n",
            "Epoch 19/20\n",
            "6/6 [==============================] - 2s 342ms/step - loss: 0.0990 - accuracy: 0.9635 - val_loss: 0.3974 - val_accuracy: 0.9062\n",
            "Epoch 20/20\n",
            "6/6 [==============================] - 2s 277ms/step - loss: 0.0831 - accuracy: 0.9792 - val_loss: 0.3245 - val_accuracy: 0.9688\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Plot training & validation accuracy values\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('Model accuracy')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.xlabel('Epoch')\n",
        "plt.legend(['Train', 'Validation'], loc='upper left')\n",
        "plt.show()\n",
        "\n",
        "# Plot training & validation loss values\n",
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('Model loss')\n",
        "plt.ylabel('Loss')\n",
        "plt.xlabel('Epoch')\n",
        "plt.legend(['Train', 'Validation'], loc='upper left')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 927
        },
        "id": "9fY8J1lDkxhb",
        "outputId": "0bc07510-6f61-49d5-bcd6-84639afaab57"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}